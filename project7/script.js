// однострочный комментарий
/*
    многострочный
    комментарий
*/
/*
    JS - не типизированный язык программирования
    TS - типизированный JS
    JSX - объединение JS и HTML. JS - только то, что относится к выводу данных
*/
// Методы взаимодействия с браузером
// console.log("Hello World") // отобразить переданную строку в консоли
// alert("Hello Arsen") // отображает сообщение для пользователя и ждет нажатия на "ОК" // для вывода данных
// console.log("Hello Vasya") // отобразить переданную строку в консоли // для вывода данных

// prompt("Как вас зовут") // отображает вспывающее окно с переданной строкой и полем ввода. prompt для ввода данных

/*
    переменная - способ хранения данных, хранилище данных. 
    в переменной можно хранить все что угодно, например имя пользователя, продукты и т.д. 
    Есть несколько способов создать переменную в JS
    1. var - устаревшее. Область видимости - глобальная(функциональная). ЗАБЫТЬ!!!
    2. let - обычная переменная. Блочная область видимости
    3. const - константная переменная. Переменную созданную с помощью const нельзя переопределить


    const не может быть переопределена. если положили какое-то значение, то другое уже положить не можем

    Правила именования переменных:
    а) использование латиницы и транслитерацию (familiya, cena - не валидные)
    б) не может начинаться с цифры (но в любом другом месте использоват цифру можно) 
        name, name1 - валидные(правильный) и разные переменные
    в) лучше использовать осмысленное название
        Если переменная хранить имя, то это name, userName, myName
        Если стоимость товара, то price, productPrice.
    г) чувствительность к регистру; userName и UserName - две разные переменные
    д) не можем использовать тире(-)

    С заглавной буквы переменные не начинаются. 
        Есть константные переменные, которые известны до начала выполнения кода,
        н-р число ПИ - const PI - 3.14; ссылка на API - const URL  

    Есть несколько способов наименования переменных, которые состоят из словосочетания
    1. userNameSurname - camelCase. первая буква первого слова маленькая, остальные первые буквы слов Заглавные
    2. user_name - snake_case - все маленькие, но между словами есть нижний слэш(_)

    3. kebab-case - product-name
*/

    /* 
        let name = prompt("Как вас зовут") // prompt всегда возвращает строку. 10 -> "10"
        console.log(name)
        name = 10
        console.log(name)
    */

    /* Assignment to constant variable.
        const myName = prompt("Как вас зовут")
        console.log(myName)
        myName = 10
        console.log(myName)
    */


/*  
    Типы данных JS
    1. string - строка - "Hello World", "256"
    2. number - число - 256, 10, 10.5, 10.35263  [-2^64;2^64]  
*/

/*
    Математические операторы
    1. + 
    2. - 
    3. *
    4. /
    5. % - остаток от деления
*/

/*
    // Входные данные
    const a = 10
    const b = 20
    // Мат. операции 
    const sum = a + b
    const minus = a - b
    const mult = a * b
    const divide = a / b
    // Вывод данных
    console.log(sum, minus, mult, divide)
    console.log(minus)
    console.log(mult)
    console.log(divide)
*/

/* % - остаток от деления 
    const k = 40
    const l = 6

    const rest = k % l // 40/5 = 8 - остаток 0  // 40 / 6 = 6 4/6
    console.log("Остаток: ", rest)
*/

/* + как оператор конкатенации
    конкатенация - склеивание строк
*/
const name = "Arsen"
const surname = "Iusupov"

const fullName = name + surname
console.log(fullName)
// console.log(name + surname)
/* 
    prompt("Ввести число") - всегда возвращает тип данных string(строка)
    +prompt("Введите число") - в этом случае вернется тип данных number 
    ДЗ. 
    1. Добавить пробел между строками name и surname
    2. Есть переменные r = 12, g = 13, b = 14. Используя конкатенацию вывести строку "rgb({12}, {13}, 14)"
    3. Попросить у пользователя ввести его возраст(годы) и в консоли вывести год его рождения(валидный для 2023)
    4. Попросить ввести число и в консоли вывести квадрат этого числа
    5. Попросить пользователя ввести два числа (поочередно - 2x prompt), а в консоли вывести их произведение(*)

*/


